{"version":3,"sources":["connector.js"],"names":[],"mappings":"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","file":"connector.js","sourcesContent":["import {OAuth2ConnectorBase} from '@hoist/oauth-connector';\nimport {merge} from 'lodash';\n\nlet overrides = {\n  baseSite: 'https://public-api.wordpress.com',\n  accessTokenPath: '/oauth2/token',\n  authorizationPath: '/oauth2/authorize'\n};\nlet apiBaseUri = 'https://public-api.wordpress.com/rest/v1.1'\n/**\n   * A Hoist Connector for connecting to GitLab\n   * @extends {OAuth2ConnectorBase}\n   */\nexport default class WordpressConnector extends OAuth2ConnectorBase {\n\n  /**\n   * create a new connector\n   * @param {object} configuration - the configuration properties to use\n   * @param {string} configuration.clientId - the OAuth2 client id\n   * @param {string} configuration.clientSecret - the OAuth2 client secret\n   */\n  constructor (configuration) {\n    super(merge({}, configuration, overrides));\n    this._clientId = configuration.clientId;\n    this._configuration = configuration;\n  }\n\n  /**\n   * @private\n   * @param AuthorizationStore authorization the users authorisation store\n   * @returns Promise<object> an object containing key value pairs to send with the client to the authorization url\n   */\n  _authorizeParams (authorization) {\n    return super._authorizeParams(authorization).then((params) => {\n      params.response_type = \"code\";\n      params.scope = 'global';\n      return params;\n    });\n  }\n  //use authorization params as it has redirect uri\n  _accessParams (authorization) {\n    return super._authorizeParams(authorization).then((params) => {\n      return params || {};\n    }).then((params) => {\n      params.grant_type = \"authorization_code\"\n      return params;\n    });\n  }\n  static defaultSettings () {\n    return Promise.resolve({});\n  }\n\n  get (path) {\n    let uri = `${apiBaseUri}${path}`;\n    return this._performRequest('GET', uri).then((result) => {\n      return JSON.parse(result[0]);\n    });\n  }\n  post (path, body) {\n    let uri = `${apiBaseUri}${path}`;\n    return this._performRequest('POST', uri, body).then((result) => {\n      return JSON.parse(result[0]);\n    });\n  }\n  put (path, body) {\n    let uri = `${apiBaseUri}${path}`;\n    return this._performRequest('PUT', uri, body).then((result) => {\n      return JSON.parse(result[0]);\n    });\n  }\n  patch (path, body) {\n    let uri = `${apiBaseUri}${path}`;\n    return this._performRequest('PATCH', uri, body).then((result) => {\n      return JSON.parse(result[0]);\n    });\n  }\n  delete (path) {\n    let uri = `${apiBaseUri}${path}`;\n    return this._performRequest('DELETE', uri).then((result) => {\n      return JSON.parse(result[0]);\n    });\n  }\n}\n\n/**\n * @external {OAuth2ConnectorBase} https://doc.esdoc.org/github.com/hoist/oauth-connector/class/src/oauth2_connector.js~OAuth2ConnectorBase.html\n */\n"],"sourceRoot":"/source/"}