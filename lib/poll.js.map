{"version":3,"sources":["poll.js"],"names":[],"mappings":"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","file":"poll.js","sourcesContent":["import WordpressConnector from './connector';\nimport logger from '@hoist/logger';\nimport Moment from 'moment'\nimport errors from '@hoist/errors';\nimport config from 'config';\nimport url from 'url';\nimport moment from 'moment';\n\nvar ConnectorRequiresAuthorizationError = errors.create({name: 'ConnectorRequiresAuthorizationError'});\n\nclass WordpressPoller {\n  constructor (context) {\n    this._logger = logger.child({cls: this.constructor.name, subscription: context.subscription._id, application: context.application._id});\n    this._context = context;\n    this._connector = new WordpressConnector(context.settings);\n  }\n  poll () {\n    return this.assertCanPoll().then(() => {\n      return this.pollForChanges();\n    }).then(() => {\n      this.context.subscription.delayTill(moment().add(5, 'minutes').toDate());\n    }).catch((err) => {\n      this._logger.error(err);\n      if (!(err instanceof ConnectorRequiresAuthorizationError)) {\n        this._logger.alert(err);\n      }\n    });\n  }\n  assertCanPoll () {\n    return Promise.resolve().then(() => {\n      this._logger.info('checking credentials');\n      if (!(this._context.authorization)) {\n        this._logger.warn('Connector needs auth and no auth set');\n        //we've already setup this subscription\n        this._context.subscription.delayTill(new Moment().add(1, 'hour').toDate());\n        throw new ConnectorRequiresAuthorizationError();\n      }\n      if (!this._context.authorization.get('SubscriptionProject')) {\n        this._logger.warn('Connector needs a subscription site and none set');\n        //we've already setup this subscription\n        this._context.subscription.delayTill(new Moment().add(1, 'hour').toDate());\n        throw new ConnectorRequiresAuthorizationError();\n      }\n    });\n  }\n  pollForChanges () {\n    return Promise.resolve().then(() => {\n      return Promise.all(this._context.subscription.endpoints.map((endpoint) => {\n        return this.generateUrlForEndpoint(endpoint);\n      }));\n    }).then((urls) => {\n      return this.batchRequest(urls.map(u => u.req)).then((result) => {\n        return Promise.all(this._context.subscription.endpoints.map((endpoint) => {\n          return this.saveResultForEndpoint(endpoint, urls, result);\n        }));\n      })\n    });\n  }\n  generateUrlForEndpoint (endpoint) {\n    return Promise.resolve().then(() => {\n      let urlObj = {\n        pathname: `/sites/${this._context.authorization.get('SubscriptionProject')}/${endpoint.toLoweCase()}`,\n        query: {}\n      };\n\n      let filterDate = this._context.subscription.get(endpoint).lastResultDate;\n      if (filterDate) {\n        urlObj.query.after = moment(filterDate).toISOString();\n      }\n      if (endpoint === 'Comments') {\n        urlObj.query.status = 'all';\n      }\n      return {endpoint: endpoint, req: url.format(urlObj)};\n    });\n  }\n  batchRequest (urls) {\n    return Promise.resolve(urls.join('&urls[]=')).then((urlQuery) => {\n      return this._connector.get(`/batch?urls[]=${urlQuery}`);\n    });\n  }\n  saveResultForEndpoint (endpoint, urls, result) {\n    return Promise.resolve().then(() => {\n      let url = urls.find((u) => u.endpoint === endpoint).req;\n      let resultsForEndpoint = result[url];\n      if (resultsForEndpoint.found === 0) {\n        return;\n      } else {\n        let documents = resultsForEndpoint[endpoint.toLoweCase()];\n        return Promise.all(documents.map((document) => this.raise(endpoint, document))).then(() => {\n          return documents.map((d) => moment(d.date)).sort().pop().toDate();\n        }).then((lastResultDate) => {\n          this._context.subscription.set(endpoint, {lastResultDate});\n        });\n      }\n    });\n  }\n  raise (endpoint, document) {\n    return Promise.resolve().then(() => {\n      return this.emit(`${this._context.connectorKey}:new:${endpoint.toLoweCase()}`);\n    });\n  }\n}\n\nexport default function (context, raiseMethod) {\n  let poller = new WordpressPoller(context);\n  poller.emit = raiseMethod;\n  return poller.poll();\n};\n"],"sourceRoot":"/source/"}