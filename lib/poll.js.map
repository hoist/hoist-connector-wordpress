{"version":3,"sources":["poll.js"],"names":[],"mappings":"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","file":"poll.js","sourcesContent":["import WordpressConnector from './connector';\nimport logger from '@hoist/logger';\nimport Moment from 'moment'\nimport errors from '@hoist/errors';\nimport config from 'config';\nimport url from 'url';\nimport moment from 'moment';\n\nvar ConnectorRequiresAuthorizationError = errors.create({name: 'ConnectorRequiresAuthorizationError'});\n\nclass WordpressPoller {\n  constructor (context) {\n    this._logger = logger.child({cls: this.constructor.name, subscription: context.subscription._id, application: context.application._id});\n    this._context = context;\n    this._connector = new WordpressConnector(context.settings);\n  }\n  poll () {\n    return this.assertCanPoll().then(() => {\n      return this.pollForChanges();\n    }).then(() => {\n      this._context.subscription.delayTill(moment().add(1, 'minutes').toDate());\n    }).catch((err) => {\n      this._logger.error(err);\n      if (!(err instanceof ConnectorRequiresAuthorizationError)) {\n        this._logger.alert(err);\n      }\n      this._context.subscription.delayTill(moment().add(1, 'minutes').toDate());\n    });\n  }\n  assertCanPoll () {\n    return Promise.resolve().then(() => {\n      this._logger.info('checking credentials');\n      if (!(this._context.authorization)) {\n        this._logger.warn('Connector needs auth and no auth set');\n        //we've already setup this subscription\n        this._context.subscription.delayTill(new Moment().add(1, 'hour').toDate());\n        throw new ConnectorRequiresAuthorizationError();\n      }\n      if (!this._context.authorization.get('SubscriptionProject')) {\n        this._logger.warn('Connector needs a subscription site and none set');\n        //we've already setup this subscription\n        this._context.subscription.delayTill(new Moment().add(1, 'hour').toDate());\n        throw new ConnectorRequiresAuthorizationError();\n      }\n      this._connector.authorize(this._context.authorization);\n    });\n  }\n  pollForChanges () {\n    return Promise.resolve().then(() => {\n      return Promise.all(this._context.subscription.endpoints.map((endpoint) => {\n        return this.generateUrlForEndpoint(endpoint);\n      }));\n    }).then((urls) => {\n      return this.batchRequest(urls.map(u => u.req)).then((result) => {\n        return Promise.all(this._context.subscription.endpoints.map((endpoint) => {\n          return this.saveResultForEndpoint(endpoint, urls, result);\n        }));\n      })\n    });\n  }\n  generateUrlForEndpoint (endpoint) {\n    return Promise.resolve().then(() => {\n\n      let req = `/sites/${this._context.authorization.get('SubscriptionProject')}/${endpoint.toLowerCase()}`;\n      let query = '';\n      let filterDate = (this._context.subscription.get(endpoint) || {}).lastResultDate;\n      if (filterDate) {\n        query += `after=${moment(filterDate).toISOString()}`;\n      }\n      if (endpoint === 'Comments') {\n        if (query.length > 0) {\n          query += \"&\";\n        }\n        query += 'status=all';\n      }\n      if (query) {\n        req = `${req}?${query}`;\n      }\n      return {endpoint, req};\n    });\n  }\n  batchRequest (urls) {\n    return Promise.resolve(urls.map(req => encodeURIComponent(req)).join('&urls[]=')).then((urlQuery) => {\n      console.log(urlQuery);\n      return this._connector.get(`/batch?urls[]=${urlQuery}`);\n    });\n  }\n  saveResultForEndpoint (endpoint, urls, result) {\n    return Promise.resolve().then(() => {\n      let url = urls.find((u) => u.endpoint === endpoint).req;\n      console.log(result, url);\n      let resultsForEndpoint = result[url];\n      console.log(resultsForEndpoint);\n      let previousIdList = (this._context.subscription.get(endpoint) || {}).idList;\n      previousIdList = previousIdList || [];\n      let documents = resultsForEndpoint[endpoint.toLowerCase()].filter((document) => {\n        return previousIdList.every((id) => document.ID !== id);\n      });\n      if (documents.length < 1) {\n        return;\n      } else {\n        return Promise.all(documents.map((document) => this.raise(endpoint, document))).then(() => {\n          return documents.map((d) => moment(d.date)).sort().pop().toDate();\n        }).then((lastResultDate) => {\n\n          return {\n            lastResultDate,\n            idList: previousIdList.concat(documents.map((document) => document.ID))\n          }\n        }).then((data) => {\n          this._context.subscription.set(endpoint, data);\n        });\n      }\n    });\n  }\n  raise (endpoint, document) {\n    return Promise.resolve().then(() => {\n      return this.emit(`${this._context.connectorKey}:new:${endpoint.toLowerCase()}`, document);\n    });\n  }\n}\n\nexport default function (context, raiseMethod) {\n  let poller = new WordpressPoller(context);\n  poller.emit = raiseMethod;\n  return poller.poll();\n};\n"],"sourceRoot":"/source/"}